% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abs-api-functions.R
\name{abs_stats}
\alias{abs_stats}
\title{Download data from the ABS API}
\usage{
abs_stats(dataset, filter, start_date, end_date, lang = c("en", "fr"),
  remove_na = TRUE, include_unit = TRUE, include_obsStatus = FALSE,
  dimensionAtObservation = c("AllDimensions", "TimeDimension",
  "MeasureDimension"), detail = c("Full", "DataOnly", "SeriesKeysOnly",
  "NoData"), return_url = FALSE, cache)
}
\arguments{
\item{dataset}{Character vector of indicator codes. These codes correspond to the
\code{indicatorID} column from the indicator data frame of \code{abs_cache} or
\code{abs_cachelist}, or the result of \code{abs_indicators}.}

\item{filter}{A list that contains filter of dimensions available in the specified \code{series}
to use in the API call. If NULL, no filter is set and the query tries to return all dimensions
of the dataset. Valid dimensions to include in the list supplied to filter include: MEASURE,
REGION, INDEX, TSEST and FREQUENCY.}

\item{start_date}{Numeric or character. If numeric it must be in %Y form (i.e. four digit
year). For data at the sub-annual granularity the API supports a format as follows: Monthly
data -- "2016-M01", Quarterly data -- "2016-Q1", Semi-annual data -- 2016-B2, Financial year
data -- 2016-17.}

\item{end_date}{Numeric or character (refer to \code{startdate}).}

\item{lang}{Language in which to return the results. If \code{lang} is unspecified, english is
the default.}

\item{remove_na}{If \code{TRUE}, remove blank or NA observations. If \code{FALSE}, no blank or NA
values are removed from the return.}

\item{include_unit}{If \code{TRUE}, the column unit is not removed from the return. If
\code{FALSE}, this column is removed.}

\item{include_obsStatus}{If \code{TRUE}, the column obsStatus is not removed from the return. If
\code{FALSE}, this column is removed= FALSE.}

\item{dimensionAtObservation}{The identifier of the dimension to be attached at the observation
level. The default order is: 'AllDimensions', 'TimeDimension' and 'MeasureDimension'.
AllDimensions results in a flat list of observations without any grouping.}

\item{detail}{This argument specifies the desired amount of information to be returned. Possible values
  are:

  \itemize{
    \item Full: all data and documentation, including annotations (default)
    \item DataOnly: attributes – and therefore groups – will be excluded
    \item SeriesKeysOnly: only the series elements and the dimensions that make up the series keys
    \item NoData: returns the groups and series, including attributes and annotations, without observations
  }}

\item{return_url}{If \code{TRUE}, return the generated request URL only.}

\item{cache}{An existing cachelist of available ABS datasets created by \code{abs_cachelist}. If
\code{NULL}, uses the stored package cachelist.}
}
\value{
Returns a data frame of the selected series from specified ABS dataset.
}
\description{
This function downloads the specified ABS data series from the ABS API.
}
\note{
The data query submitted by this function uses the ABS RESTful API based on the SDMX-JSON
  standard. It has a maximum allowable character limit of 1000 characters allowed in the data
  URL.

  Further limitations known at this time include:
  \itemize{
    \item Only anonymous queries are supported, there is no authentication
    \item Each response is limited to 1 million observations
    \item Errors are not returned in the JSON format but HTTP status codes and messages are
      set according to the Web Services Guidelines
    \item The lastNObservations parameter is not supported
    \item Observations follow the time series (or import-specific) order even if
      \code{dimensionAtObservation=AllDimensions} is used.
  }
}
\examples{
   x <- abs_stats("CPI");
   x <- abs_stats(dataset="CPI", filter="all", return_url=TRUE);
   x <- abs_stats(dataset="CPI", filter = list(MEASURE=1, REGION=c(1:8,50), INDEX=10001, TSEST=10, FREQUENCY="Q"))
   x <- abs_stats(dataset="CPI", filter = list(MEASURE="all", REGION=50, INDEX=10001, TSEST=10, FREQUENCY="Q"))
    x <- abs_stats(dataset="CPI", filter = list(MEASURE="all", REGION=50, INDEX=10001, TSEST=10, FREQUENCY="Q"), return_url=TRUE)
}
\author{
David Mitchell <david.mitchell@infrastructure.gov.au>
}
